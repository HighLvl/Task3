/*
 * This file was generated by the Gradle 'init' ru.nsu.cherepanov.task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    id("com.github.jacobono.jaxb") version "1.3.5"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation("org.junit.jupiter:junit-jupiter:5.7.2")

    implementation("org.apache.logging.log4j:log4j-api:2.17.2")
    implementation("org.apache.logging.log4j:log4j-core:2.17.2")

    implementation("org.apache.commons:commons-compress:1.21")
    implementation("commons-cli:commons-cli:1.5.0")

    implementation("com.sun.xml.bind:jaxb-core:3.0.2")
    runtimeOnly("javax.xml.bind:jaxb-api:2.3.1")
    runtimeOnly("com.sun.xml.bind:jaxb-impl:3.0.0")

    jaxb("com.sun.xml.bind:jaxb-xjc:3.0.2")
    jaxb("javax.xml.bind:jaxb-api:2.3.1")
    jaxb("com.sun.xml.bind:jaxb-impl:3.0.0")
    jaxb("jakarta.xml.bind:jakarta.xml.bind-api:3.0.0")

    implementation("org.postgresql:postgresql:42.3.3")
}


application {
    // Define the main class for the application.
    mainClass.set("ru.nsu.cherepanov.task.App")
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(14))
    }
}

jaxb {
    xsdDir = "app/src/main/resources"
    xjc {
        generatePackage = "ru.nsu.cherepanov.osm.model.generated"
    }
}